// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// draw_hX
Rcpp::NumericVector draw_hX(Rcpp::IntegerVector s, Rcpp::NumericVector y, double phi, double sigma2, double mu, Rcpp::NumericMatrix X, Rcpp::NumericVector beta);
RcppExport SEXP _svmod_draw_hX(SEXP sSEXP, SEXP ySEXP, SEXP phiSEXP, SEXP sigma2SEXP, SEXP muSEXP, SEXP XSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type s(sSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(draw_hX(s, y, phi, sigma2, mu, X, beta));
    return rcpp_result_gen;
END_RCPP
}
// draw_s
Rcpp::IntegerVector draw_s(Rcpp::NumericVector y, Rcpp::NumericVector h);
RcppExport SEXP _svmod_draw_s(SEXP ySEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(draw_s(y, h));
    return rcpp_result_gen;
END_RCPP
}
// timesTwo
NumericVector timesTwo(NumericVector x);
RcppExport SEXP _svmod_timesTwo(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(timesTwo(x));
    return rcpp_result_gen;
END_RCPP
}
// chol_Eigen
Eigen::MatrixXd chol_Eigen(Eigen::Map<Eigen::MatrixXd> M);
RcppExport SEXP _svmod_chol_Eigen(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(chol_Eigen(M));
    return rcpp_result_gen;
END_RCPP
}
// inv_Eigen
Eigen::MatrixXd inv_Eigen(Eigen::Map<Eigen::MatrixXd> M);
RcppExport SEXP _svmod_inv_Eigen(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(inv_Eigen(M));
    return rcpp_result_gen;
END_RCPP
}
// dgemv
void dgemv(Rcpp::NumericMatrix A, Rcpp::NumericVector x, Rcpp::NumericVector y);
RcppExport SEXP _svmod_dgemv(SEXP ASEXP, SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y(ySEXP);
    dgemv(A, x, y);
    return R_NilValue;
END_RCPP
}
// dpbtrf
void dpbtrf(Rcpp::NumericVector A, int N);
RcppExport SEXP _svmod_dpbtrf(SEXP ASEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type A(ASEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    dpbtrf(A, N);
    return R_NilValue;
END_RCPP
}
// dtbtrs
void dtbtrs(Rcpp::NumericVector A, Rcpp::NumericVector x, int ND);
RcppExport SEXP _svmod_dtbtrs(SEXP ASEXP, SEXP xSEXP, SEXP NDSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type A(ASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type ND(NDSEXP);
    dtbtrs(A, x, ND);
    return R_NilValue;
END_RCPP
}
// dtbtrsT
void dtbtrsT(Rcpp::NumericVector A, Rcpp::NumericVector x, int ND);
RcppExport SEXP _svmod_dtbtrsT(SEXP ASEXP, SEXP xSEXP, SEXP NDSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type A(ASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type ND(NDSEXP);
    dtbtrsT(A, x, ND);
    return R_NilValue;
END_RCPP
}
// dsbmv
void dsbmv(Rcpp::NumericVector A, Rcpp::NumericVector x, int N);
RcppExport SEXP _svmod_dsbmv(SEXP ASEXP, SEXP xSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type A(ASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    dsbmv(A, x, N);
    return R_NilValue;
END_RCPP
}
// UBMV
void UBMV(Rcpp::NumericVector& v, double phi, double sigma2);
RcppExport SEXP _svmod_UBMV(SEXP vSEXP, SEXP phiSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type v(vSEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    UBMV(v, phi, sigma2);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_svmod_draw_hX", (DL_FUNC) &_svmod_draw_hX, 7},
    {"_svmod_draw_s", (DL_FUNC) &_svmod_draw_s, 2},
    {"_svmod_timesTwo", (DL_FUNC) &_svmod_timesTwo, 1},
    {"_svmod_chol_Eigen", (DL_FUNC) &_svmod_chol_Eigen, 1},
    {"_svmod_inv_Eigen", (DL_FUNC) &_svmod_inv_Eigen, 1},
    {"_svmod_dgemv", (DL_FUNC) &_svmod_dgemv, 3},
    {"_svmod_dpbtrf", (DL_FUNC) &_svmod_dpbtrf, 2},
    {"_svmod_dtbtrs", (DL_FUNC) &_svmod_dtbtrs, 3},
    {"_svmod_dtbtrsT", (DL_FUNC) &_svmod_dtbtrsT, 3},
    {"_svmod_dsbmv", (DL_FUNC) &_svmod_dsbmv, 3},
    {"_svmod_UBMV", (DL_FUNC) &_svmod_UBMV, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_svmod(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
